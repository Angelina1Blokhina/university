// матстат.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

int main()
{
	float df_price[116]={ 23.5, 23.5,23.5,28.0, 31.0,31.0,31.0,32.0,33.0,33.0,35.0,35.0,35.0,39.0
,39.0
,39.0
,44.0
,44.0
,46.0
,46.0
,46.0
,46.0
,46.0
,46.0
,49.0
,49.0
,49.0
,49.0
,51.0
,54.0
,60.0
,60.0
,60.0
,69.0
,69.0
,69.0
,70.0
,70.0
,70.0
,70.0
,72.0
,72.0
,72.0
,72.0
,72.0
,72.0
,72.0
,72.0
,72.0
,75.0
,75.0
,75.0
,75.0
,76.0
,76.0
,78.0
,78.0
,83.0
,83.0
,83.0
,83.0
,84.0
,90.0
,90.0
,90.0
,90.0
,90.0
,90.0
,90.0
,90.0
,92.0
,93.0
,93.0
,93.0
,96.0
,96.0
,96.0
,96.0
,98.0
,98.0
,98.0
,99.0
,99.0
,99.0
,105.0
,105.0
,110.0
,110.0
,110.0
,110.0
,114.0
,114.0
,115.0
,115.0
,115.0
,119.0
,120.0
,123.0
,123.0
,126.0
,140.0
,140.0
,140.0
,140.0
,149.0
,149.0
,149.0
,149.0
,155.0
,188.0
,188.0
,198.0
,230.0
,230.0
,235.0
, 248.0 };
float count = 1;
float x[42];
float m[42];
int d = 0;
for (int i = 1; i < 116; i++)
{
	if (df_price[i] == df_price[i-1])
		count += 1;
	else
	{
		x[d] = df_price[i-1];
		m[d] = count;
		d++;
		count = 1;
	}
	
	/*if (df_price[115] != df_price[114]):
	x.append(df_price[i])*/
}


count = 0;
float x_min = df_price[0];
float x_max = df_price[116 - 1];
float R = x_max - x_min; 
float k = 1 + 3.322 * floor(log2(116));
float h = R / k;
float x0 = x_min - h / 2;
float interval[23];
for (int i = 0; i < k + 2; i++)
{
	interval[i] = x0;
	x0 += h;
}
			
cout << interval;


float count_interval[40];
float p_interval [40];
int n = 0;
int j = 0;
d = 0;
int i1 = 0;
for (int i = 0; i < 44; i++)
{
	if (i1 < i)
	{
		i = i1;
		n++;
	}
		
	i1++;
	if (x[i] > interval[n] and x[i] <= interval[n + 1])
	{
		count += m[j];
		j += 1;
	}
	else
	{
		if (x[i] > interval[n + 1] and x[i] <= interval[n + 2])
		{

			count_interval[d] = count;
			
			p_interval[d] = count / 116;
			count = m[j];
			j += 1;
			n += 1;
			d++;
		}
		else
		{
			if (x[i] > interval[n + 2])
			{
				count_interval[d] = count;
				
				p_interval[d] = count / 116;
				count = 0;
				d++;
				while (x[i] > interval[n + 2])
				{
					i1 = i;
					n++;
					count_interval[d] = 0;
					d++;
				}
			}
			else
			{
				count_interval[d] = count;
				p_interval[d] = count / 116;
				d++;
				n += 1;
			}
		}
	}
}

cout << count_interval;
cout << p_interval;

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
